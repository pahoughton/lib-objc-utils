#ifndef _SMKDateTimeUtils_ii_
#define _SMKDateTimeUtils_ii_
/**
   File:        DateTimeUtils.ii
   Project:	StlUtils ()
   Desc:        
  
  	Inline Date and Time functions.
  
    	long
    	SecInTimeT( long sec );
    	    return the second of the minute.
  
    	long
    	MinInTimeT( long sec )
    	    return the minute of the hour.
  
    	long
    	HourInTimeT( long sec )
    	    return the hour of the day.
  
    	long
    	HoursInTimeT( long sec )
    	    return the number of hours.
  
    	long
    	DaysInTimeT( long sec )
    	    return the number of days.
  
    	long
    	DateInTimeT( long sec )
    	    return the date portion only.
  
  	void
  	YYMMDDtoYYYYMMDD( char * dest, const char * src )
  	    convert 970304 to 19970304. if the first digit is < 5
  	    the year is assumed to be 2000, so 050304 will be 20050304.
  
   Author:      Paul Houghton - (paul4hough@gmail.com)
   Created:     05/02/95 06:32
  
   Revision History: (See end of file for Revision Log)
  
    $Author$ 
    $Date$ 
    $Name$ 
    $Revision$ 
    $State$ 
  
    $Id$ 
**/

#include "SMKDateTimeUtils.h"
#include <ctype.h>
//
// Generic time_t manipulators
//

inline
time_t
SecInTimeT( time_t sec )
{
  return(sec % SecPerMin );
}

inline
time_t
SecOfDay( time_t sec )
{
  return( sec % (SecPerDay) );
}

inline
time_t
MinInTimeT( time_t sec )
{
  return( (sec % (SecPerHour)) / SecPerMin );
}

inline
time_t
HourInTimeT( time_t sec )
{
  return( (sec % (SecPerDay)) / (SecPerHour) );
}

inline
time_t
HoursInTimeT( time_t sec )
{
  return( sec / (SecPerHour) );
}

inline
time_t
DaysInTimeT( time_t sec )
{
  return( (sec / (SecPerDay) ) );
}

inline
time_t
DateInTimeT( time_t sec )
{
  return( sec - (sec % (SecPerDay) ) );
}

#if !defined( COMMON_IsLeapYear )
#define STLUTILS_IsLeapYear 1

inline
bool
IsLeapYear( int year)
{
  return( ( ( !(year % 4) ) && ( (year % 100) || !(year % 400) ) ));
}

#endif

inline
void
YYMMDDtoYYYYMMDD( char * dest, const char * src )
{
  if( isdigit( src[0] )  )
    {
      if( src[0] < '5' )
	memcpy( dest, "20", 2 );
      else
	memcpy( dest, "19", 2 );
      memcpy( dest + 2, src, 6 );
    }
  else
    {
      memset( dest, ' ', 8 );
    }
}



#endif // ! def _SMKDateTimeUtils_ii_ 

